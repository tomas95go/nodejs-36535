<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>e-commerce</title>
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.1.3/dist/darkly/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
</head>
<body class="bg-dark text-white">

    {{> navigation/navbar }}
    <div class="container mt-5">
        {{{body}}}
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        const $newEmailForm = document.getElementById("new-email-form");
        const $newEmailInput = document.getElementById("email-input");
        const $email = document.getElementById("user-email-display");

        if($newEmailForm){

            $newEmailForm.addEventListener("submit", (e) => {
                e.preventDefault();
                if($newEmailInput.value){
                    $email.textContent = $newEmailInput.value;
                    $newEmailInput.value = '';
                    $newEmailInput.setAttribute("disabled", "true");
                }
            });

            const $chatMessage = document.getElementById("chat-messages");
            const $newMessageForm = document.getElementById("new-message-form"); 
            const $newMessageInput = document.getElementById("new-message-input");
            $newMessageForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    if(!$email.textContent){
                        Toastify({
                            text: "Por favor, ingrese un email para continuar",
                            duration: 3000,
                            newWindow: true,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            className: "bg-danger",
                            style: {
                            background: "unset",
                            },
                        }).showToast();
                    } else if (!$newMessageInput.value) {
                        Toastify({
                            text: "Por favor, ingrese un mensaje para continuar",
                            duration: 3000,
                            newWindow: true,
                            close: true,
                            gravity: "top", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            className: "bg-danger",
                            style: {
                            background: "unset",
                            },
                        }).showToast();
                    } else {
                        const chatMessage = {
                            email: $email.textContent,
                            text: $newMessageInput.value
                        }
                        socket.emit('chat message', chatMessage);
                        $newMessageInput.value = '';
                    }
            });

            socket.on('chat message', function(chatMessage) {
                const {email, message, date} = chatMessage;
                const $newMessage = document.createElement('li');
                $newMessage.classList.add('list-group-item');

                $newMessageEmail = document.createElement('span');
                $newMessageEmail.classList.add('text-info', 'fw-bold');
                $newMessageEmail.textContent = `${email} `;
                $newMessage.appendChild($newMessageEmail);

                $newMessageDate = document.createElement('span');
                $newMessageDate.classList.add('text-muted');
                $newMessageDate.textContent = `[${date}]: `;
                $newMessage.appendChild($newMessageDate);

                $newMessageText = document.createElement('span');
                $newMessageText.classList.add('text-success', 'fst-italic');
                $newMessageText.textContent = message;
                $newMessage.appendChild($newMessageText);

                $chatMessage.appendChild($newMessage);

                window.scrollTo(0, document.body.scrollHeight);
            });
        }

        const $newAlbumForm = document.getElementById('new-album-form');
        if($newAlbumForm){
            
            const getAllAlbums = async () => {
                const response = await fetch(`http://localhost:8080/productos/list`);
                const data = await response.json();
                const { message , albums} = data;
                if(albums.length){
                    const $albumsTableBody = document.getElementById('albums-table-body');

                    albums.forEach(album => {
                        const $tr = document.createElement('tr');
                        $tr.classList.add('text-center');
                        const {album:name, price, img, artist, release_year:releaseYear } = album;
                        
                        const $tdAlbum = document.createElement('td');
                        $tdAlbum.textContent = name;

                        const $tdPrice = document.createElement('td');
                        $tdPrice.textContent = price;

                        const $tdImg = document.createElement('td');
                        $tdImg.classList.add('w-25', 'h-25');
                        const $img = document.createElement('img');
                        $img.classList.add('img-thumbnail');
                        $img.setAttribute('src', img);
                        $img.setAttribute('alt', 'artist');
                        $tdImg.appendChild($img);

                        const $tdArtist = document.createElement('td');
                        $tdArtist.textContent = artist;

                        const $tdReleaseYear = document.createElement('td');
                        $tdReleaseYear.textContent = releaseYear;

                        $tr.appendChild($tdAlbum );
                        $tr.appendChild($tdPrice);
                        $tr.appendChild($tdImg);
                        $tr.appendChild($tdArtist);
                        $tr.appendChild($tdReleaseYear);

                        $albumsTableBody.appendChild($tr);

                    });
                }
            }

            getAllAlbums();

            $newAlbumForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const form = new FormData(e.target);
            const newAlbum = {
                album: form.get("album-name"),
                price: Number(form.get("album-price")),
                img: form.get("album-img"),
                artist: form.get("album-artist"),
                release_year: form.get("album-release-year")
            }
            socket.emit('new album', newAlbum);
            $newAlbumForm.reset();
            });

            socket.on('new album', (album) => {

                const albumAttributes = Object.entries(album);
                const $albumsTableBody = document.getElementById('albums-table-body');
                const $tr = document.createElement('tr');
                $tr.classList.add('text-center');

                albumAttributes.forEach(attribute => {

                    const [key, value] = attribute;
                    const $td = document.createElement('td');
                    
                    if(key === 'img'){
                        $td.classList.add('w-25', 'h-25');
                        const $img = document.createElement('img');
                        $img.classList.add('img-thumbnail');
                        $img.setAttribute('src', value);
                        $img.setAttribute('alt', 'artist');
                        $td.appendChild($img);
                    } else {
                        $td.textContent = value;
                    }

                    $tr.appendChild($td);
                });

                $albumsTableBody.appendChild($tr);

            });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
</body>
</html>